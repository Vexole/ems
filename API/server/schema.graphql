scalar GraphQLDate

enum Title {
  Employee
  Manager
  Director
  VP
}

enum Department {
  IT
  Marketing
  HR
  Engineering
}

enum EmployeeType {
  FullTime
  PartTime
  Contract
  Seasonal
}

type User {
  _id: ID!
  firstName: String!
  lastName: String!
  age: Int!
  dateOfJoining: GraphQLDate!
  title: Title!
  department: Department!
  employeeType: EmployeeType!
  status: Int!
}

input UserUpdate {
  _id: ID!
  firstName: String!
  lastName: String!
  age: Int!
  dateOfJoining: GraphQLDate!
  title: Title!
  department: Department!
  employeeType: EmployeeType!
  status: Int!
}

input UserInput {
  firstName: String!
  lastName: String!
  age: Int!
  dateOfJoining: GraphQLDate!
  title: Title!
  department: Department!
  employeeType: EmployeeType!
  status: Int = 1
}

type Query {
  employeesList(employeeType: EmployeeType): [User!]!
  employeeById(employeeId: ID!): User!
}

type Mutation {
  saveEmployee(employee: UserInput!): User
  updateEmployee(employee: UserUpdate!): ID!
  deleteEmployee(employeeId: ID!): User
}
